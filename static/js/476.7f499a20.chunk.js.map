{"version":3,"file":"static/js/476.7f499a20.chunk.js","mappings":"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","sources":["pages/Home/MainFeaturedPost.jsx","pages/Home/Home.jsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nfunction MainFeaturedPost(props) {\n  const { post } = props;\n\n  return (\n    <Paper\n      sx={{\n        position: 'relative',\n        backgroundColor: 'grey.800',\n        color: '#fff',\n        mb: 4,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundImage: `url(${post.image})`,\n      }}\n    >\n      {\n        <img\n          style={{ display: 'none' }}\n          src={post.image}\n          alt={post.imageText}\n        />\n      }\n      <Box\n        sx={{\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          backgroundColor: 'rgba(0,0,0,.3)',\n        }}\n      />\n      <Grid container>\n        <Grid item md={6}>\n          <Box\n            sx={{\n              position: 'relative',\n              p: { xs: 3, md: 14 },\n              pr: { md: 10 },\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h3\"\n              color=\"inherit\"\n              gutterBottom\n            >\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.shape({\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    imageText: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MainFeaturedPost;\n","import CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport MainFeaturedPost from './MainFeaturedPost';\n\nconst mainFeaturedPost = {\n  title: 'Welcome to your phonebook!',\n  description: 'Keep your contacts safe and sound with phonebook application.',\n  image: 'https://source.unsplash.com/random?wallpapers',\n  imageText: 'main image description',\n};\n\nconst defaultTheme = createTheme();\n\nconst Home = () => {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <CssBaseline />\n      <Container maxWidth=\"100vw\">\n        <MainFeaturedPost post={mainFeaturedPost} />\n      </Container>\n    </ThemeProvider>\n  );\n};\nexport default Home;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["props","post","Paper","sx","position","backgroundColor","color","mb","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","image","style","display","src","alt","imageText","Box","top","bottom","right","left","Grid","container","item","md","p","xs","pr","Typography","component","variant","gutterBottom","title","paragraph","description","mainFeaturedPost","defaultTheme","createTheme","ThemeProvider","theme","CssBaseline","Container","maxWidth","_excluded","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","createStyledComponent","useThemeProps","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","React","ref","className","other","_objectWithoutPropertiesLoose","_jsx","as","clsx","createContainer","styled"],"sourceRoot":""}